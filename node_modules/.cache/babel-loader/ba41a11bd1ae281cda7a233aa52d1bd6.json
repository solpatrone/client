{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import { useSelector } from \"react-redux\";\n// import ReactPaginate from \"react-paginate\";\n// const items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n// export function Items({ currentItems }) {\n//   return (\n//     <>\n//       {currentItems &&\n//         currentItems.map((item) => (\n//           <div>\n//             <h3>Item #{item}</h3>\n//           </div>\n//         ))}\n//     </>\n//   );\n// }\n// export default function Paginate({ itemsPerPage }) {\n//   const owners = useSelector((state) => state.owners);\n//   const [currentItems, setCurrentItems] = useState(null);\n//   const [pageCount, setPageCount] = useState(0);\n//   const [itemOffset, setItemOffset] = useState(0);\n//   useEffect(() => {\n//     // Fetch items from another resources.\n//     const endOffset = itemOffset + itemsPerPage;\n//     console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n//     setCurrentItems(owners.slice(itemOffset, endOffset));\n//     setPageCount(Math.ceil(items.length / itemsPerPage));\n//   }, [itemOffset, itemsPerPage]);\n//   // Invoke when user click to request another page.\n//   const handlePageClick = (event) => {\n//     const newOffset = (event.selected * itemsPerPage) % items.length;\n//     console.log(\n//       `User requested page number ${event.selected}, which is offset ${newOffset}`\n//     );\n//     setItemOffset(newOffset);\n//   };\n//   return (\n//     <>\n//       <Items currentItems={currentItems} />\n//       <ReactPaginate\n//         breakLabel=\"...\"\n//         nextLabel=\"next >\"\n//         onPageChange={handlePageClick}\n//         pageRangeDisplayed={3}\n//         pageCount={pageCount}\n//         previousLabel=\"< previous\"\n//         renderOnZeroPageCount={null}\n//       />\n//     </>\n//   );\n// }\nimport React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function Paginate(_ref){var restosPerPage=_ref.restosPerPage,allRestaurants=_ref.allRestaurants,paginado=_ref.paginado;var pageNumbers=[];for(var i=1;i<=Math.ceil(allRestaurants.length/restosPerPage);i++){pageNumbers.push(i);}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"ul\",{children:pageNumbers&&pageNumbers.map(function(p){return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"a\",{onClick:function onClick(){return paginado(p);},href:\"#\",children:p})},p);})})});}","map":{"version":3,"sources":["/Users/erikamasini/henry/client/src/components/Paginate/Paginate.jsx"],"names":["React","Paginate","restosPerPage","allRestaurants","paginado","pageNumbers","i","Math","ceil","length","push","map","p"],"mappings":"AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,2CAEA,cAAe,SAASC,CAAAA,QAAT,MAA+D,IAA3CC,CAAAA,aAA2C,MAA3CA,aAA2C,CAA5BC,cAA4B,MAA5BA,cAA4B,CAAZC,QAAY,MAAZA,QAAY,CAC5E,GAAMC,CAAAA,WAAW,CAAG,EAApB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIC,IAAI,CAACC,IAAL,CAAUL,cAAc,CAACM,MAAf,CAAwBP,aAAlC,CAArB,CAAuEI,CAAC,EAAxE,CAA4E,CAC1ED,WAAW,CAACK,IAAZ,CAAiBJ,CAAjB,EACD,CAED,mBACE,kCACE,oBACGD,WAAW,EACVA,WAAW,CAACM,GAAZ,CAAgB,SAACC,CAAD,qBACd,iCACE,UAAG,OAAO,CAAE,yBAAMR,CAAAA,QAAQ,CAACQ,CAAD,CAAd,EAAZ,CAA+B,IAAI,CAAC,GAApC,UACGA,CADH,EADF,EAASA,CAAT,CADc,EAAhB,CAFJ,EADF,EADF,CAcD","sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { useSelector } from \"react-redux\";\n// import ReactPaginate from \"react-paginate\";\n\n// const items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n\n// export function Items({ currentItems }) {\n//   return (\n//     <>\n//       {currentItems &&\n//         currentItems.map((item) => (\n//           <div>\n//             <h3>Item #{item}</h3>\n//           </div>\n//         ))}\n//     </>\n//   );\n// }\n\n// export default function Paginate({ itemsPerPage }) {\n//   const owners = useSelector((state) => state.owners);\n//   const [currentItems, setCurrentItems] = useState(null);\n//   const [pageCount, setPageCount] = useState(0);\n\n//   const [itemOffset, setItemOffset] = useState(0);\n\n//   useEffect(() => {\n//     // Fetch items from another resources.\n//     const endOffset = itemOffset + itemsPerPage;\n//     console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n//     setCurrentItems(owners.slice(itemOffset, endOffset));\n//     setPageCount(Math.ceil(items.length / itemsPerPage));\n//   }, [itemOffset, itemsPerPage]);\n\n//   // Invoke when user click to request another page.\n//   const handlePageClick = (event) => {\n//     const newOffset = (event.selected * itemsPerPage) % items.length;\n//     console.log(\n//       `User requested page number ${event.selected}, which is offset ${newOffset}`\n//     );\n//     setItemOffset(newOffset);\n//   };\n\n//   return (\n//     <>\n//       <Items currentItems={currentItems} />\n//       <ReactPaginate\n//         breakLabel=\"...\"\n//         nextLabel=\"next >\"\n//         onPageChange={handlePageClick}\n//         pageRangeDisplayed={3}\n//         pageCount={pageCount}\n//         previousLabel=\"< previous\"\n//         renderOnZeroPageCount={null}\n//       />\n//     </>\n//   );\n// }\n\nimport React from \"react\";\n\nexport default function Paginate({ restosPerPage, allRestaurants, paginado }) {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(allRestaurants.length / restosPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <div>\n      <ul>\n        {pageNumbers &&\n          pageNumbers.map((p) => (\n            <li key={p}>\n              <a onClick={() => paginado(p)} href=\"#\">\n                {p}\n              </a>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}